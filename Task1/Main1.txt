Primitive Data Types in Java
Java has eight primitive data types, categorized into four groups:

1. Integer Types
byte (1 byte) → Stores whole numbers from -128 to 127.
short (2 bytes) → Stores whole numbers from -32,768 to 32,767.
int (4 bytes) → Stores whole numbers from -2,147,483,648 to 2,147,483,647.
long (8 bytes) → Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807.
2. Floating-Point Types
float (4 bytes) → Stores decimal values with 6-7 decimal digits precision.
double (8 bytes) → Stores decimal values with 15 decimal digits precision.
3. Character Type
char (2 bytes) → Stores a single character using Unicode.
4. Boolean Type
boolean (1 bit) → Stores true or false.
Typecasting in Java
Typecasting is converting a variable from one data type to another. There are two types:

1. Implicit Typecasting (Widening)
Happens automatically when converting from a smaller to a larger data type.
No data loss occurs.
Example:
int num = 100;
double d = num; // Implicit casting: int → double
System.out.println(d); // Output: 100.0
2. Explicit Typecasting (Narrowing)
Manually performed by the programmer.
May lead to data loss.
Syntax: (targetType) value
Example:
double d = 99.99;
int num = (int) d; // Explicit casting: double → int
System.out.println(num); // Output: 99 (fractional part is lost)